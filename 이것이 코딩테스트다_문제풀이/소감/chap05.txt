<5장 dfs/bfs>

(예제 및 실전)
5-1~5-4 굳이 안 함...
5-5. 점화식이 재귀식이라니.. 재귀를 하기 전 점화식의 형태로 생각하는 것이 문제를 풀 때 좋은 것일까?
5-6. 도 굳이..
5-7. graph=[[] for k in range(3)] 이 식을 유용하게 쓸 것 같다..?
5-8. 재귀를 생각할 때, 시작한다고 생각하는 것 보다는 앞의 차시가 끝났다라고 생각하는 것이 더 좋을 것 같은 예감
5-9. dfs는 스택, 재귀, bfs는 큐, 일반 반복!
5-10.(36/30분)이런게 탐색이구나 하는 문제. 나같은 경우에는 bfs를 연쇄적으로 했는데, dfs가 더 빠르다니... dfs로 하는 마음을 길러보자
5-11.(15분/30분)그냥 오른쪽 아래로 내려가는거라서 쉽게 풀었다. 만약 그게 아니라면 깊이우선으로 푸는 것이 더 좋을듯(데구처럼)

(기출)
15. (22분/30분)하긴 했는데.. 탐색으로 하지 않았어..-> 확장성이 부족해지긴 하더라구... 재귀문이라는게 끝날 때까지 반복한다는 의미니까 절대 반복문으로는 사용 못할듯... 재귀 형식을 잘 사용해야지!
-이미 방문을 했으면 그것이 최단거리라는 것을 파악하는게 중요했을 것 같다
16. (x/40분) 40분 동안 최소 벽개수 알고리즘 빼고 다 짰어...(바이러스 퍼져나가는 알고, 찾는 알고, 안전한 곳 세는 알고, ...) 삼성전자도 못갈듯
-바로 assign한 것도 아니고 mazey=maze.copy()이렇게 했거든? 근데 계속 같은 주소값을 가르키는거.. 오륜지 뭔지 몰라서 한참 헤매다 그냥 maze_copy함수 만들어줬어
17. (45분/50분) 3중 루프를 쓰긴 했는데 한개는 상수 range라 ㄱㅊ할 듯, 어렵지 않았는데 시간이 오래걸림. 시간에 의한 난도인듯
18. (50분/20분) 또카오 네이년...일단 문제에서 나온 알고리즘을 이해하는데 굉장히 오래걸렸고, 이해하다말고 그냥 하란대로 해보자..! 해서 구현하니까 금방 하더라....
19. (34분/30분) 간단한건데... for루프를 잘못 돌려서 늦은 듯? dfs 대박이다 진짜 이런 생각은 도대체 어떻게 하는거지..? woooooow
20. (38분/60분) 60분 짜리에 별 두개반 짜리는 아닌 듯..? bfs 썼는데 안 어려웠음
21. (+60분/40분) 31분동안 인접한 친구들 checklist 작성하는거랑 등등 필요 요소 전부 짰음. 근데 dfs에서 좀 말도 안되는 문제가 생기기 시작했음(120..무근본). 이건 해결한다고 쳐도 여러개의 묶음이 있을 때 어떻게 해야할지 모르겠어서 포기...
22...

총평 : 어려운 문제에 부딪혔을 때, 큐나 스택같은 자료구조를 사용하지 못한 점이 아쉬움
